apply plugin: 'java'
apply plugin: 'tomcat'
apply plugin: 'maven'
apply plugin: 'war'
apply plugin: 'rebel'

println "PROJECT=" + project.name

group = 'com.livingoncodes.spring.web'
version = '0.1-SNAPSHOT'

buildscript {
    repositories {
        mavenCentral()
        mavenLocal()

        maven { url "http://download.java.net/maven/2" }
        maven { url 'http://repo.spring.io/plugins-release' }
    }

    dependencies {
        classpath 'org.gradle.api.plugins:gradle-tomcat-plugin:0.9.9'
        classpath 'org.springframework.build.gradle:propdeps-plugin:0.0.5'
        classpath 'org.zeroturnaround:gradle-jrebel-plugin:1.1.2'
    }
}

repositories {
    mavenCentral()
    mavenLocal()

    maven { url 'http://repo.spring.io/plugins-release' }
}


dependencies {
    def springVersion = '4.1.3.RELEASE'
    def springSecurityVersion = '3.2.5.RELEASE'

    def tomcatVersion = '7.0.54'
    tomcat "org.apache.tomcat.embed:tomcat-embed-core:${tomcatVersion}",
            "org.apache.tomcat.embed:tomcat-embed-logging-juli:${tomcatVersion}"
    tomcat("org.apache.tomcat.embed:tomcat-embed-jasper:${tomcatVersion}") {
        exclude group: 'org.eclipse.jdt.core.compiler', module: 'ecj'
    }
    
    compile "org.springframework:spring-core:${springVersion}"
    compile "org.springframework:spring-beans:${springVersion}"
    compile "org.springframework:spring-context:${springVersion}"
    compile "org.springframework:spring-jdbc:${springVersion}"
    compile "org.springframework:spring-web:${springVersion}"
    compile "org.springframework:spring-webmvc:${springVersion}"
    compile "org.springframework:spring-orm:${springVersion}"
    compile "org.springframework:spring-context-support:${springVersion}"

    compile 'javax.servlet:jstl:1.2'

    compile 'commons-dbcp:commons-dbcp:1.4'

    compile 'org.hibernate:hibernate-core:3.6.10.Final'
    
    compile 'mysql:mysql-connector-java:5.1.34'
    compile 'javax.validation:validation-api:1.1.0.Final'
    compile 'org.hibernate:hibernate-entitymanager:4.2.16.Final'
    compile 'org.hibernate:hibernate-validator:5.1.3.Final'
    compile 'commons-validator:commons-validator:1.4.0'
    compile 'c3p0:c3p0:0.9.1.2'

    compile 'org.springframework.data:spring-data-jpa:1.7.0.RELEASE'
    compile 'org.springframework.data:spring-data-commons:1.7.0.RELEASE'

    compile "org.springframework.security:spring-security-core:${springSecurityVersion}"
    compile "org.springframework.security:spring-security-web:${springSecurityVersion}"
    compile "org.springframework.security:spring-security-config:${springSecurityVersion}"
    compile "org.springframework.security:spring-security-taglibs:${springSecurityVersion}"
    
    compile 'org.apache.tiles:tiles-extras:3.0.5'
    compile 'org.apache.tiles:tiles-servlet:3.0.5'
    compile 'org.apache.tiles:tiles-jsp:3.0.5'

    compile 'org.slf4j:slf4j-api:1.7.5'
    runtime 'org.slf4j:slf4j-log4j12:1.7.5'

    testCompile "org.springframework:spring-test:${springVersion}"
    testCompile 'junit:junit:4.12'
    testCompile 'com.h2database:h2:1.4.179'

    compile 'org.apache.poi:poi:3.11-beta3'
    compile 'org.apache.poi:poi-ooxml:3.11-beta3'
    compile 'javax.mail:mail:1.4.5'

    providedCompile 'javax.servlet:javax.servlet-api:3.1.0'

    compile 'commons-lang:commons-lang:2.3'
}


test {
    testLogging {
        // Show that tests are run in the command-line output
        events 'started', 'passed'
    }
}

task deployWar() {
    def tomcatHome = '/usr/local/tomcat7/webapps'
    doLast {
        logger.lifecycle("Going to deploy ${project.name} into ${tomcatHome} from ${libsDir.getPath()}")

        copy {
            from libsDir
            into "${tomcatHome}"
            include 'bdchub.war'
        }
    }
}
war.dependsOn(generateRebel)
deployWar.dependsOn(war)

task wrapper(type: Wrapper) { gradleVersion = '1.11' }

tomcatRunWar.contextPath = ''
